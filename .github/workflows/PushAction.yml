# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: publish

on:
  release:
    types:
      - created
  
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/dist/nuget

jobs:
#TODO: check nuget/GH auth flows, is token required etc.?
#TODO: check if publish job sees dist/nuget, see publish-artifact for reference
#TODO: omit push if built version is lower than or equal to latest published nuget package
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    - run: dotnet pack -c Release -o $NuGetDirectory

    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}
        
  validate_nuget:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    - uses: actions/download-artifact@v4
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}

    - name: Install Meziantous Validator
      run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

    - name: Validate Package
      run: meziantou.validate-nuget-package $NuGetDirectory/*.nupkg

#test actual release artifacte/avoid recompiling and testing then
  run_test:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Run tests
        run: dotnet test -c Release

  deploy:
    runs-on: ubuntu-latest
    needs: [ validate_nuget, run_test ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        
      - name: Publish NuGet Package
        run: dotnet nuget push --api-key ${{ secrets.NugetApiToken }} $NuGetDirectory








